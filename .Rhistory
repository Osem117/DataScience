dfClus$t1_champ1_sumName2= NULL
dfClus$t1_champ2_sumName1= NULL
dfClus$t1_champ2_sumName2= NULL
dfClus$t1_champ3_sumName1= NULL
dfClus$t1_champ3_sumName2= NULL
dfClus$t1_champ4_sumName1= NULL
dfClus$t1_champ4_sumName2= NULL
dfClus$t1_champ5_sumName1= NULL
dfClus$t1_champ5_sumName2= NULL
#Hechizos del equipo 1
dfClus$t2_champ1_sumName1= NULL
dfClus$t2_champ1_sumName2= NULL
dfClus$t2_champ2_sumName1= NULL
dfClus$t2_champ2_sumName2= NULL
dfClus$t2_champ3_sumName1= NULL
dfClus$t2_champ3_sumName2= NULL
dfClus$t2_champ4_sumName1= NULL
dfClus$t2_champ4_sumName2= NULL
dfClus$t2_champ5_sumName1= NULL
dfClus$t2_champ5_sumName2= NULL
#Eliminamos las columnas de baneo
#Bans t1
dfClus$t1_banName1 = NULL
dfClus$t1_banName2 = NULL
dfClus$t1_banName3 = NULL
dfClus$t1_banName4 = NULL
dfClus$t1_banName5 = NULL
#Bans t2
dfClus$t2_banName1 = NULL
dfClus$t2_banName2 = NULL
dfClus$t2_banName3 = NULL
dfClus$t2_banName4 = NULL
dfClus$t2_banName5 = NULL
t1 = table(x=dfClus$gameDuration, y=dfClus$t1_champ1Name)
t2 = table(x=dfClus$gameDuration, y=dfClus$t1_champ2Name)
t3 = table(x=dfClus$gameDuration, y=dfClus$t1_champ3Name)
t4 = table(x=dfClus$gameDuration, y=dfClus$t1_champ4Name)
t5 = table(x=dfClus$gameDuration, y=dfClus$t1_champ5Name)
t6 = table(x=dfClus$gameDuration, y=dfClus$t2_champ1Name)
t7 = table(x=dfClus$gameDuration, y=dfClus$t2_champ2Name)
t8 = table(x=dfClus$gameDuration, y=dfClus$t2_champ3Name)
t9 = table(x=dfClus$gameDuration, y=dfClus$t2_champ4Name)
t10 = table(x=dfClus$gameDuration, y=dfClus$t2_champ5Name)
tt = t1+t2+t3+t4+t5+t6+t7+t8+t9+t10
tt
dt = as.data.frame(tt)
dt
ggplot(dt, aes(x = dt$x, y = dt$y, fill=dt$Freq)) +geom_tile()
ggplot(dt, aes(x = dt$x, y = dt$y, fill=dt$Freq)) +geom_tile()
best200 <- dt[!(dt$Freq < 200),]
best200
pbest200 = ggplot(best200, aes(x = best200$x, y = best200$y, fill=best200$Freq)) +geom_tile()
pbest200
best400 <- dt[!(dt$Freq < 400),]
best400
pbest400 = ggplot(best400, aes(x = best400$x, y = best400$y, fill=best400$Freq)) +geom_tile()
pbest400
# Probabilidad del quipo Azul de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerBLue <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower != "blue"),]
nrow(dfHist_heraldTowerBLue)
p_firstTowerBLUE<- percent(((nrow(dfHist_heraldTowerBLue))/nrow(dfHist_heraldBLue)))
# Probabilidad del quipo Rojo de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerRed <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower != "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerRED<- percent(((nrow(dfHist_heraldTowerRed))/nrow(dfHist_heraldRed)))
# Ahora al contrario
# Probabilidad del quipo Rojo de tirar primera torre
# si el equipo Azul se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerEnemyR <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower == "blue"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyRed<- percent(((nrow(dfHist_heraldTowerEnemyR))/nrow(dfHist_heraldBLue)))
# Probabilidad del quipo Azul de tirar primera torre
# si el equipo Rojo se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerEnemyB <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower == "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyBlue<- percent(((nrow(dfHist_heraldTowerEnemyB))/nrow(dfHist_heraldRed)))
# Convierto a tabla y dataframe
probX <- matrix(c (p_firstTowerBLUE, p_firstTowerRED, p_firstTowerEnemyRed, p_firstTowerEnemyBlue), ncol=4, nrow = 1, byrow=TRUE)
colnames(probX) <- c("First Tower Blue","First Tower Red","First Tower EnemyRed", "First Tower EnemyBlue")
rownames(probX) <- c("Probability")
probX <- as.table(probX)
probX
prob1 <- as.data.frame(probX)
cbp1 <- c("#33CCFF", "#FF6666", "#FF6666","#33CCFF")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name= "Probabilities %") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
# Probabilidad del quipo Azul de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerBLue <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower != "blue"),]
nrow(dfHist_heraldTowerBLue)
p_firstTowerBLUE<- percent(((nrow(dfHist_heraldTowerBLue))/nrow(dfHist_heraldBLue)))
p_firstTowerBLUE
# Probabilidad del quipo Rojo de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerRed <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower != "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerRED<- percent(((nrow(dfHist_heraldTowerRed))/nrow(dfHist_heraldRed)))
p_firstTowerRED
# Ahora al contrario
# Probabilidad del quipo Rojo de tirar primera torre
# si el equipo Azul se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerEnemyR <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower == "blue"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyRed<- percent(((nrow(dfHist_heraldTowerEnemyR))/nrow(dfHist_heraldBLue)))
p_firstTowerEnemyRed
# Probabilidad del quipo Azul de tirar primera torre
# si el equipo Rojo se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerEnemyB <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower == "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyBlue<- percent(((nrow(dfHist_heraldTowerEnemyB))/nrow(dfHist_heraldRed)))
p_firstTowerEnemyBlue
# Convierto a tabla y dataframe
probX <- matrix(c (p_firstTowerBLUE, p_firstTowerRED, p_firstTowerEnemyRed, p_firstTowerEnemyBlue), ncol=4, nrow = 1, byrow=TRUE)
colnames(probX) <- c("First Tower Blue","First Tower Red","First Tower EnemyRed", "First Tower EnemyBlue")
rownames(probX) <- c("Probability")
probX <- as.table(probX)
probX
prob1 <- as.data.frame(probX)
cbp1 <- c("#33CCFF", "#FF6666", "#FF6666","#33CCFF")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name= "Probabilities %") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
pbest200 = ggplot(best200, aes(x = best200$x, y = best200$y, fill=best200$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration")
pbest200
pbest200 = ggplot(best200, aes(x = best200$x, y = best200$y, fill=best200$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions")
pbest200
pbest400 = ggplot(best400, aes(x = best400$x, y = best400$y, fill=best400$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions")
pbest400
pbest400 = ggplot(best400, aes(x = best400$x, y = best400$y, fill=best400$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions") +
scale_z_discrete(name = "xxx")
cbp1 <- c("#33CCFF", "#FF6666", "#FF6666","#33CCFF")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_continuous(name="Probabilities", limits=c(0, 100)) +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
pbest200 = ggplot(best200, aes(x = best200$x, y = best200$y, fill=best200$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions")
pbest200 + labs(fill = "Dose (mg)")
pbest400 = ggplot(best400, aes(x = best400$x, y = best400$y, fill=best400$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions") +
pbest400
pbest400 = ggplot(best400, aes(x = best400$x, y = best400$y, fill=best400$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions")
pbest200 + labs(fill = "Frequency")
pbest400
pbest400 = ggplot(best400, aes(x = best400$x, y = best400$y, fill=best400$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions")
pbest200 + labs(fill = "Frequency")
pbest400
pbest400 = ggplot(best400, aes(x = best400$x, y = best400$y, fill=best400$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions")
pbest400 + labs(fill = "Frequency")
pbest200 = ggplot(best200, aes(x = best200$x, y = best200$y, fill=best200$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions")
pbest200 + labs(fill = "Frequency")
ggplot(dt, aes(x = dt$x, y = dt$y, fill=dt$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions")
pbest200 + labs(fill = "Frequency")
ggplot(dt, aes(x = dt$x, y = dt$y, fill=dt$Freq)) +geom_tile() +
scale_x_discrete(name = "Game Duration") +
scale_y_discrete(name = "Champions") +
labs(fill = "Frequency")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name="Probabilities", limits=c(0, 100)) +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
cbp1 <- c("#33CCFF", "#FF6666", "#FF6666","#33CCFF")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_continuous(name="Probabilities") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
cbp1 <- c("#33CCFF", "#FF6666", "#FF6666","#33CCFF")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name="Probabilities") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name="Probabilities") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue Team','First Tower/Red Team','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
cbp1 <- c("#33CCFF", "#FF6666", "#FF6666","#33CCFF")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name="Probabilities") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue Team','First Tower\nRed Team','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
cbp1 <- c("#33CCFF", "#FF6666", "#FF6666","#33CCFF")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name="Probabilities") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower\nBlue Team','First Tower\nRed Team','First Tower\nEnemy (Red Team)','First Tower\nEnemy (Blue Team)')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_continuous(name="Probabilities", limits=c(0, 100)) +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower\nBlue Team','First Tower\nRed Team','First Tower\nEnemy (Red Team)','First Tower\nEnemy (Blue Team)')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_continuous(name="Probabilities", limits=c(0, 100)) +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower\nBlue Team','First Tower\nRed Team','First Tower\nEnemy (Red Team)','First Tower\nEnemy (Blue Team)')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete (name="Probabilities", limits=c(0, 100)) +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower\nBlue Team','First Tower\nRed Team','First Tower\nEnemy (Red Team)','First Tower\nEnemy (Blue Team)')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_continuous(name="Probabilities", limits=c(0, 100)) +
scale_x_continuous(name = "Probab. of getting First Tower", labels = c('First Tower\nBlue Team','First Tower\nRed Team','First Tower\nEnemy (Red Team)','First Tower\nEnemy (Blue Team)')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
cbp1 <- c("#33CCFF", "#FF6666", "#FF6666")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_continuous(name="Probabilities", limits=c(0, 100)) +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
cbp1 <- c("#33CCFF", "#FF6666", "#FF6666","#33CCFF")
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = cbp1, colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name="Probabilities") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower\nBlue Team','First Tower\nRed Team','First Tower\nEnemy (Red Team)','First Tower\nEnemy (Blue Team)')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
#View winning rates
WinRates<- ggplot(dfHist, aes(x = winner, fill = winner)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF", "#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "Winning Team", labels = c('Blue','Red'))
#View First Blood rates
FBRates<- ggplot(dfHist, aes(x = firstBlood, fill = firstBlood)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF","#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "First Blood", labels = c('Blue','Red'))
#View First Inhibitor rates
FIRates<- ggplot(dfHist, aes(x = firstInhibitor, fill = firstInhibitor)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF","#D3D3D3","#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "First Inhibitor", labels = c('Blue','None','Red'))
#View First Baron rates
FBarRates<- ggplot(dfHist, aes(x = firstBaron, fill = firstBaron)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF","#D3D3D3","#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "First Baron", labels = c('Blue','None','Red'))
figure <- ggarrange(WinRates, FBRates, FIRates, FBarRates,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
library(plyr)
library(dplyr)
library(RJSONIO)
library(ggplot2)
library(ggpubr)
library(scales)
figure <- ggarrange(WinRates, FBRates, FIRates, FBarRates,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
figure
#View winning rates
WinRates<- ggplot(dfHist, aes(x = winner, fill = winner)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF", "#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "Winning Team", labels = c('Blue','Red'))
#View First Blood rates
FBRates<- ggplot(dfHist, aes(x = firstBlood, fill = firstBlood)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF","#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "First Blood", labels = c('Blue','Red'))
#View First Inhibitor rates
FIRates<- ggplot(dfHist, aes(x = firstInhibitor, fill = firstInhibitor)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF","#D3D3D3","#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "First Inhibitor", labels = c('Blue','None','Red'))
#View First Baron rates
FBarRates<- ggplot(dfHist, aes(x = firstBaron, fill = firstBaron)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF","#D3D3D3","#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "First Baron", labels = c('Blue','None','Red')) +
labs(name = "xxx")
figure <- ggarrange(WinRates, FBRates, FIRates, FBarRates,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
figure
#View winning rates
WinRates<- ggplot(dfHist, aes(x = winner, fill = winner)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF", "#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "Winning Team", labels = c('Blue','Red')) +
labs(fill = "Team")
#View First Blood rates
FBRates<- ggplot(dfHist, aes(x = firstBlood, fill = firstBlood)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF","#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "First Blood", labels = c('Blue','Red')) +
labs(fill = "Team")
#View First Inhibitor rates
FIRates<- ggplot(dfHist, aes(x = firstInhibitor, fill = firstInhibitor)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF","#D3D3D3","#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "First Inhibitor", labels = c('Blue','None','Red')) +
labs(fill = "Team")
#View First Baron rates
FBarRates<- ggplot(dfHist, aes(x = firstBaron, fill = firstBaron)) +
geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=1) +
scale_fill_manual(values=c("#33CCFF","#D3D3D3","#FF6666")) +
scale_y_continuous(name= "Games") +
scale_x_discrete(name = "First Baron", labels = c('Blue','None','Red')) +
labs(fill = "Team")
figure <- ggarrange(WinRates, FBRates, FIRates, FBarRates,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
figure
# Hago tablas y calculo la probabilidad de ganar respecto
# a diferentes variables
attach(dfHist)
table(winner)
tableWin<- table(winner)
table(firstBlood)
tableFB<- table(firstBlood)
table(firstTower)
tableFT<- table(firstTower)
table(firstInhibitor)
tableFI<- table(firstInhibitor)
table(firstBaron)
tableFBar<- table(firstBaron)
table(firstDragon)
tableFD<- table(firstDragon)
table(firstRiftHerald)
tableFRH<- table(firstRiftHerald)
tableFB_Win<- table(firstBlood, winner)
p_firstBloodBlue<-percent(tableFB_Win[1,1]/ tableFB[1])
p_firstBloodBlue
tableFT_Win<- table(firstTower, winner)
p_firstTowerBlue<-percent(tableFT_Win[1,1]/ tableFT[1])
p_firstTowerBlue
tableFI_Win<- table(firstInhibitor, winner)
p_firstInhibitorBlue<-percent(tableFI_Win[1,1]/ tableFI[1])
p_firstInhibitorBlue
tableFBar_Win<- table(firstBaron, winner)
p_firstBaronBlue<-percent(tableFBar_Win[1,1]/ tableFBar[1])
p_firstBaronBlue
tableFD_Win<- table(firstDragon, winner)
p_firstDragonBlue<-percent(tableFD_Win[1,1]/ tableFD[1])
p_firstDragonBlue
tableFRH_Win<- table(firstRiftHerald, winner)
p_firstRiftHeraldBlue<-percent(tableFRH_Win[1,1]/ tableFRH[1])
p_firstRiftHeraldBlue
# Convierto a tabla y dataframe
probWin <- matrix(c (p_firstBloodBlue, p_firstTowerBlue, p_firstInhibitorBlue, p_firstBaronBlue, p_firstDragonBlue, p_firstRiftHeraldBlue), ncol=6, nrow = 1, byrow=TRUE)
colnames(probWin) <- c("p_firstBloodBlue","p_firstTowerBlue","p_firstInhibitorBlue","p_firstBaronBlue","p_firstDragonBlue","p_firstRiftHeraldBlue")
rownames(probWin) <- c("Probability")
probWin <- as.table(probWin)
probWin
prob2 <- as.data.frame(probWin)
Prob2_plot<- ggplot(prob2, aes(x=
rownames(prob2), Freq)) + geom_bar(stat='identity', fill = "#FFFF99", colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_x_discrete(labels = c('First Blood', 'First Tower', 'First Inhibitor', 'First Baron', 'First Dragon', 'First Herald')) +
scale_y_discrete(name= "Probabilities %") +
ggtitle("Winning probability when Team Blue got First XX")
Prob2_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
# Hago tablas y calculo la probabilidad de ganar respecto
# a diferentes variables
attach(dfHist)
table(winner)
tableWin<- table(winner)
table(firstBlood)
tableFB<- table(firstBlood)
table(firstTower)
tableFT<- table(firstTower)
table(firstInhibitor)
tableFI<- table(firstInhibitor)
table(firstBaron)
tableFBar<- table(firstBaron)
table(firstDragon)
tableFD<- table(firstDragon)
table(firstRiftHerald)
tableFRH<- table(firstRiftHerald)
tableFB_Win<- table(firstBlood, winner)
p_firstBloodBlue<-percent(tableFB_Win[1,1]/ tableFB[1])
p_firstBloodBlue
tableFT_Win<- table(firstTower, winner)
p_firstTowerBlue<-percent(tableFT_Win[1,1]/ tableFT[1])
p_firstTowerBlue
tableFI_Win<- table(firstInhibitor, winner)
p_firstInhibitorBlue<-percent(tableFI_Win[1,1]/ tableFI[1])
p_firstInhibitorBlue
tableFBar_Win<- table(firstBaron, winner)
p_firstBaronBlue<-percent(tableFBar_Win[1,1]/ tableFBar[1])
p_firstBaronBlue
tableFD_Win<- table(firstDragon, winner)
p_firstDragonBlue<-percent(tableFD_Win[1,1]/ tableFD[1])
p_firstDragonBlue
tableFRH_Win<- table(firstRiftHerald, winner)
p_firstRiftHeraldBlue<-percent(tableFRH_Win[1,1]/ tableFRH[1])
p_firstRiftHeraldBlue
# Convierto a tabla y dataframe
probWin <- matrix(c (p_firstBloodBlue, p_firstTowerBlue, p_firstInhibitorBlue, p_firstBaronBlue, p_firstDragonBlue, p_firstRiftHeraldBlue), ncol=6, nrow = 1, byrow=TRUE)
colnames(probWin) <- c("p_firstBloodBlue","p_firstTowerBlue","p_firstInhibitorBlue","p_firstBaronBlue","p_firstDragonBlue","p_firstRiftHeraldBlue")
rownames(probWin) <- c("Probability")
probWin <- as.table(probWin)
probWin
prob2 <- as.data.frame(probWin)
Prob2_plot<- ggplot(prob2, aes(x=
rownames(prob2), Freq)) + geom_bar(stat='identity', fill = "#FFFF99", colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_x_discrete(name= "Objectives", labels = c('First Blood', 'First Tower', 'First Inhibitor', 'First Baron', 'First Dragon', 'First Herald')) +
scale_y_discrete(name= "Probabilities %") +
ggtitle("Winning probability when Team Blue got First XX")
Prob2_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
# Ahora calculo el porcentaje de veces que el quipo azul ha completado los diferentes objetivos cuando el equipo azul gana.
table(winner)
tableWin<- table(winner)
tableFB_Win<- table(firstBlood, winner)
p_firstBlood<-percent(tableFB_Win[1,1]/ tableWin[1])
p_firstBlood
tableFT_Win<- table(firstTower, winner)
p_firstTower<-percent(tableFT_Win[1,1]/ tableWin[1])
p_firstTower
tableFI_Win<- table(firstInhibitor, winner)
p_firstInhibitor<-percent(tableFI_Win[1,1]/ tableWin[1])
p_firstInhibitor
tableFBar_Win<- table(firstBaron, winner)
p_firstBaron<-percent(tableFBar_Win[1,1]/ tableWin[1])
p_firstBaron
tableFD_Win<- table(firstDragon, winner)
p_firstDragon<-percent(tableFD_Win[1,1]/ tableWin[1])
p_firstDragon
tableFRH_Win<- table(firstRiftHerald, winner)
p_firstRiftHerald<-percent(tableFRH_Win[1,1]/ tableWin[1])
p_firstRiftHerald
# Convierto a tabla y dataframe
probA <- matrix(c (p_firstBlood, p_firstTower, p_firstInhibitor, p_firstBaron, p_firstDragon, p_firstRiftHerald), ncol=6, nrow = 1, byrow=TRUE)
colnames(probA) <- c("p_firstBlood","p_firstTower","p_firstInhibitor","p_firstBaron","p_firstDragon","p_firstRiftHerald")
rownames(probA) <- c("Probability")
probA <- as.table(probA)
probA
df_ProbA <- as.data.frame(probA)
ProbA_plot<- ggplot(df_ProbA, aes(x=
rownames(df_ProbA), Freq)) + geom_bar(stat='identity', fill = "#FFFF99", colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_x_discrete(name= "Objectives", labels = c('First Blood', 'First Tower', 'First Inhibitor', 'First Baron', 'First Dragon', 'First Herald')) +
scale_y_discrete(name= "Probabilities %") +
ggtitle("First XX if Team Blue wins")
ProbA_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))

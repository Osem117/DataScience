# Ganador de la partida
df_games$winner[df_games$winner == "0"] <- "none"
df_games$winner[df_games$winner == "1"] <- "blue"
df_games$winner[df_games$winner == "2"] <- "red"
# Equipo que consigue eliminar a un jugador del equipo contrario primero (esto conlleva una recompensa extra dentro del juego)
df_games$firstBlood[df_games$firstBlood == "0"] <- "none"
df_games$firstBlood[df_games$firstBlood == "1"] <- "blue"
df_games$firstBlood[df_games$firstBlood == "2"] <- "red"
# Equipo que consigue derrumbar una torre del equipo contrario primero (esto conlleva una recompensa extra dentro del juego)
df_games$firstTower[df_games$firstTower == "0"] <- "none"
df_games$firstTower[df_games$firstTower == "1"] <- "blue"
df_games$firstTower[df_games$firstTower == "2"] <- "red"
# Equipo que consigue derrumbar un inhibidor del equipo contrario primero (los inhibidores se encuentran muy cerca de la estructura final que hay que derrumbar para terminar la partida)
df_games$firstInhibitor[df_games$firstInhibitor == "0"] <- "none"
df_games$firstInhibitor[df_games$firstInhibitor == "1"] <- "blue"
df_games$firstInhibitor[df_games$firstInhibitor == "2"] <- "red"
# Equipo que consigue eliminar primero al monstruo de la jungla denominado como Baron (este monstruo otorga una gran mejora de estadísticas al equipo que lo haya eliminado)
df_games$firstBaron[df_games$firstBaron == "0"] <- "none"
df_games$firstBaron[df_games$firstBaron == "1"] <- "blue"
df_games$firstBaron[df_games$firstBaron == "2"] <- "red"
# Equipo que consigue eliminar primero a alguno de los dragones que aparecen (estos monstruos otorgan pequeñas mejoras de estadísiticas al equipo que los haya eliminado)
df_games$firstDragon[df_games$firstDragon == "0"] <- "none"
df_games$firstDragon[df_games$firstDragon == "1"] <- "blue"
df_games$firstDragon[df_games$firstDragon == "2"] <- "red"
# Equipo que consigue eliminar al monstruo de la jungla denominado como Heraldo (solo aparece 1 durante la partida y ayuda al equipo que lo haya eliminado a derrumbar estructuras tales como torres e inhibidores)
df_games$firstRiftHerald[df_games$firstRiftHerald == "0"] <- "none"
df_games$firstRiftHerald[df_games$firstRiftHerald == "1"] <- "blue"
df_games$firstRiftHerald[df_games$firstRiftHerald == "2"] <- "red"
# Campeón utilizado por el jugador 1 del equipo azul
df_champs = rename(df_champs, t1_champ1id = 'id') # (1) Renombramos la columna de IDs del dataframe de campeones por el nombre de la columna que queremos sustituir en el dataframe de partidas
df_champs = rename(df_champs, t1_champ1Name = 'name') # (2) Renombramos la columna de nombres del dataframe de campeones por el nombre que queramos que tenga la nueva columna de nombres en el dataframe de partidas
df_games <- left_join(df_games, df_champs, by = 't1_champ1id') # (3) Realizamos un left join entre ambos datasets a través de la columna que ahora se llama igual en ambos dataframes y que queremos sustituir (columnas que contienen IDs). Esto resultará en la adición de una nueva columna nombrada como hayamos decidido en el paso 2 y que contiene el nombre de cada campeón según su ID.
df_games$t1_champ1id <- NULL # (4) Eliminamos la columna que contiene los IDs de los campeones que queríamos sustituir en un primer momento.
# Campeón utilizado por el jugador 2 del equipo azul
df_champs = rename(df_champs, t1_champ2id = 't1_champ1id')
df_champs = rename(df_champs, t1_champ2Name = 't1_champ1Name')
df_games <- left_join(df_games, df_champs, by = 't1_champ2id')
df_games$t1_champ2id <- NULL
# Campeón utilizado por el jugador 3 del equipo azul
df_champs = rename(df_champs, t1_champ3id = 't1_champ2id')
df_champs = rename(df_champs, t1_champ3Name = 't1_champ2Name')
df_games <- left_join(df_games, df_champs, by = 't1_champ3id')
df_games$t1_champ3id <- NULL
# Campeón utilizado por el jugador 4 del equipo azul
df_champs = rename(df_champs, t1_champ4id = 't1_champ3id')
df_champs = rename(df_champs, t1_champ4Name = 't1_champ3Name')
df_games <- left_join(df_games, df_champs, by = 't1_champ4id')
df_games$t1_champ4id <- NULL
# Campeón utilizado por el jugador 5 del equipo azul
df_champs = rename(df_champs, t1_champ5id = 't1_champ4id')
df_champs = rename(df_champs, t1_champ5Name = 't1_champ4Name')
df_games <- left_join(df_games, df_champs, by = 't1_champ5id')
df_games$t1_champ5id <- NULL
# Campeón baneado por el jugador 1 del equipo azul
df_champs = rename(df_champs, t1_ban1 = 't1_champ5id')
df_champs = rename(df_champs, t1_banName1 = 't1_champ5Name')
df_games <- left_join(df_games, df_champs, by = 't1_ban1')
df_games$t1_ban1 <- NULL
# Campeón baneado por el jugador 2 del equipo azul
df_champs = rename(df_champs, t1_ban2 = 't1_ban1')
df_champs = rename(df_champs, t1_banName2 = 't1_banName1')
df_games <- left_join(df_games, df_champs, by = 't1_ban2')
df_games$t1_ban2 <- NULL
# Campeón baneado por el jugador 3 del equipo azul
df_champs = rename(df_champs, t1_ban3 = 't1_ban2')
df_champs = rename(df_champs, t1_banName3 = 't1_banName2')
df_games <- left_join(df_games, df_champs, by = 't1_ban3')
df_games$t1_ban3 <- NULL
# Campeón baneado por el jugador 4 del equipo azul
df_champs = rename(df_champs, t1_ban4 = 't1_ban3')
df_champs = rename(df_champs, t1_banName4 = 't1_banName3')
df_games <- left_join(df_games, df_champs, by = 't1_ban4')
df_games$t1_ban4 <- NULL
# Campeón baneado por el jugador 5 del equipo azul
df_champs = rename(df_champs, t1_ban5 = 't1_ban4')
df_champs = rename(df_champs, t1_banName5 = 't1_banName4')
df_games <- left_join(df_games, df_champs, by = 't1_ban5')
df_games$t1_ban5 <- NULL
# Campeón utilizado por el jugador 1 del equipo rojo
df_champs = rename(df_champs, t2_champ1id = 't1_ban5')
df_champs = rename(df_champs, t2_champ1Name = 't1_banName5')
df_games <- left_join(df_games, df_champs, by = 't2_champ1id')
df_games$t2_champ1id <- NULL
# Campeón utilizado por el jugador 2 del equipo rojo
df_champs = rename(df_champs, t2_champ2id = 't2_champ1id')
df_champs = rename(df_champs, t2_champ2Name = 't2_champ1Name')
df_games <- left_join(df_games, df_champs, by = 't2_champ2id')
df_games$t2_champ2id <- NULL
# Campeón utilizado por el jugador 3 del equipo rojo
df_champs = rename(df_champs, t2_champ3id = 't2_champ2id')
df_champs = rename(df_champs, t2_champ3Name = 't2_champ2Name')
df_games <- left_join(df_games, df_champs, by = 't2_champ3id')
df_games$t2_champ3id <- NULL
# Campeón utilizado por el jugador 4 del equipo rojo
df_champs = rename(df_champs, t2_champ4id = 't2_champ3id')
df_champs = rename(df_champs, t2_champ4Name = 't2_champ3Name')
df_games <- left_join(df_games, df_champs, by = 't2_champ4id')
df_games$t2_champ4id <- NULL
# Campeón utilizado por el jugador 5 del equipo rojo
df_champs = rename(df_champs, t2_champ5id = 't2_champ4id')
df_champs = rename(df_champs, t2_champ5Name = 't2_champ4Name')
df_games <- left_join(df_games, df_champs, by = 't2_champ5id')
df_games$t2_champ5id <- NULL
# Campeón baneado por el jugador 1 del equipo rojo
df_champs = rename(df_champs, t2_ban1 = 't2_champ5id')
df_champs = rename(df_champs, t2_banName1 = 't2_champ5Name')
df_games <- left_join(df_games, df_champs, by = 't2_ban1')
df_games$t2_ban1 <- NULL
# Campeón baneado por el jugador 2 del equipo rojo
df_champs = rename(df_champs, t2_ban2 = 't2_ban1')
df_champs = rename(df_champs, t2_banName2 = 't2_banName1')
df_games <- left_join(df_games, df_champs, by = 't2_ban2')
df_games$t2_ban2 <- NULL
# Campeón baneado por el jugador 3 del equipo rojo
df_champs = rename(df_champs, t2_ban3 = 't2_ban2')
df_champs = rename(df_champs, t2_banName3 = 't2_banName2')
df_games <- left_join(df_games, df_champs, by = 't2_ban3')
df_games$t2_ban3 <- NULL
# Campeón baneado por el jugador 4 del equipo rojo
df_champs = rename(df_champs, t2_ban4 = 't2_ban3')
df_champs = rename(df_champs, t2_banName4 = 't2_banName3')
df_games <- left_join(df_games, df_champs, by = 't2_ban4')
df_games$t2_ban4 <- NULL
# Campeón baneado por el jugador 5 del equipo rojo
df_champs = rename(df_champs, t2_ban5 = 't2_ban4')
df_champs = rename(df_champs, t2_banName5 = 't2_banName4')
df_games <- left_join(df_games, df_champs, by = 't2_ban5')
df_games$t2_ban5 <- NULL
# Hechizo principal utilizado por el jugador 1 del equipo azul
df_summoners = rename(df_summoners, t1_champ1_sum1 = 'id') # (1) Renombramos la columna de IDs del dataframe de hechizos por el nombre de la columna que queremos sustituir en el dataframe de partidas
df_summoners = rename(df_summoners, t1_champ1_sumName1 = 'name') # (2) Renombramos la columna de nombres del dataframe de hechizos por el nombre que queramos que tenga la nueva columna de nombres en el dataframe de partidas
df_games <- left_join(df_games, df_summoners, by = 't1_champ1_sum1') # (3) Realizamos un left join entre ambos datasets a través de la columna que ahora se llama igual en ambos dataframes y que queremos sustituir (columnas que contienen IDs). Esto resultará en la adición de una nueva columna nombrada como hayamos decidido en el paso 2 y que contiene el nombre de cada hechizo según su ID.
df_games$t1_champ1_sum1 <- NULL # (4) Eliminamos la columna que contiene los IDs de los hechizos que queríamos sustituir en un primer momento.
# Hechizo secundario utilizado por el jugador 1 del equipo azul
df_summoners = rename(df_summoners, t1_champ1_sum2 = 't1_champ1_sum1')
df_summoners = rename(df_summoners, t1_champ1_sumName2 = 't1_champ1_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't1_champ1_sum2')
df_games$t1_champ1_sum2 <- NULL
# Hechizo principal utilizado por el jugador 2 del equipo azul
df_summoners = rename(df_summoners, t1_champ2_sum1 = 't1_champ1_sum2')
df_summoners = rename(df_summoners, t1_champ2_sumName1 = 't1_champ1_sumName2')
df_games <- left_join(df_games, df_summoners, by = 't1_champ2_sum1')
df_games$t1_champ2_sum1 <- NULL
# Hechizo secundario utilizado por el jugador 2 del equipo azul
df_summoners = rename(df_summoners, t1_champ2_sum2 = 't1_champ2_sum1')
df_summoners = rename(df_summoners, t1_champ2_sumName2 = 't1_champ2_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't1_champ2_sum2')
df_games$t1_champ2_sum2 <- NULL
# Hechizo principal utilizado por el jugador 3 del equipo azul
df_summoners = rename(df_summoners, t1_champ3_sum1 = 't1_champ2_sum2')
df_summoners = rename(df_summoners, t1_champ3_sumName1 = 't1_champ2_sumName2')
df_games <- left_join(df_games, df_summoners, by = 't1_champ3_sum1')
df_games$t1_champ3_sum1 <- NULL
# Hechizo secundario utilizado por el jugador 3 del equipo azul
df_summoners = rename(df_summoners, t1_champ3_sum2 = 't1_champ3_sum1')
df_summoners = rename(df_summoners, t1_champ3_sumName2 = 't1_champ3_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't1_champ3_sum2')
df_games$t1_champ3_sum2 <- NULL
# Hechizo principal utilizado por el jugador 4 del equipo azul
df_summoners = rename(df_summoners, t1_champ4_sum1 = 't1_champ3_sum2')
df_summoners = rename(df_summoners, t1_champ4_sumName1 = 't1_champ3_sumName2')
df_games <- left_join(df_games, df_summoners, by = 't1_champ4_sum1')
df_games$t1_champ4_sum1 <- NULL
# Hechizo secundario utilizado por el jugador 4 del equipo azul
df_summoners = rename(df_summoners, t1_champ4_sum2 = 't1_champ4_sum1')
df_summoners = rename(df_summoners, t1_champ4_sumName2 = 't1_champ4_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't1_champ4_sum2')
df_games$t1_champ4_sum2 <- NULL
# Hechizo principal utilizado por el jugador 5 del equipo azul
df_summoners = rename(df_summoners, t1_champ5_sum1 = 't1_champ4_sum2')
df_summoners = rename(df_summoners, t1_champ5_sumName1 = 't1_champ4_sumName2')
df_games <- left_join(df_games, df_summoners, by = 't1_champ5_sum1')
df_games$t1_champ5_sum1 <- NULL
# Hechizo secundario utilizado por el jugador 5 del equipo azul
df_summoners = rename(df_summoners, t1_champ5_sum2 = 't1_champ5_sum1')
df_summoners = rename(df_summoners, t1_champ5_sumName2 = 't1_champ5_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't1_champ5_sum2')
df_games$t1_champ5_sum2 <- NULL
# Hechizo principal utilizado por el jugador 1 del equipo rojo
df_summoners = rename(df_summoners, t2_champ1_sum1 = 't1_champ5_sum2')
df_summoners = rename(df_summoners, t2_champ1_sumName1 = 't1_champ5_sumName2')
df_games <- left_join(df_games, df_summoners, by = 't2_champ1_sum1')
df_games$t2_champ1_sum1 <- NULL
# Hechizo secundario utilizado por el jugador 1 del equipo rojo
df_summoners = rename(df_summoners, t2_champ1_sum2 = 't2_champ1_sum1')
df_summoners = rename(df_summoners, t2_champ1_sumName2 = 't2_champ1_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't2_champ1_sum2')
df_games$t2_champ1_sum2 <- NULL
# Hechizo principal utilizado por el jugador 2 del equipo rojo
df_summoners = rename(df_summoners, t2_champ2_sum1 = 't2_champ1_sum2')
df_summoners = rename(df_summoners, t2_champ2_sumName1 = 't2_champ1_sumName2')
df_games <- left_join(df_games, df_summoners, by = 't2_champ2_sum1')
df_games$t2_champ2_sum1 <- NULL
# Hechizo secundario utilizado por el jugador 2 del equipo rojo
df_summoners = rename(df_summoners, t2_champ2_sum2 = 't2_champ2_sum1')
df_summoners = rename(df_summoners, t2_champ2_sumName2 = 't2_champ2_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't2_champ2_sum2')
df_games$t2_champ2_sum2 <- NULL
# Hechizo principal utilizado por el jugador 3 del equipo rojo
df_summoners = rename(df_summoners, t2_champ3_sum1 = 't2_champ2_sum2')
df_summoners = rename(df_summoners, t2_champ3_sumName1 = 't2_champ2_sumName2')
df_games <- left_join(df_games, df_summoners, by = 't2_champ3_sum1')
df_games$t2_champ3_sum1 <- NULL
# Hechizo secundario utilizado por el jugador 3 del equipo rojo
df_summoners = rename(df_summoners, t2_champ3_sum2 = 't2_champ3_sum1')
df_summoners = rename(df_summoners, t2_champ3_sumName2 = 't2_champ3_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't2_champ3_sum2')
df_games$t2_champ3_sum2 <- NULL
# Hechizo principal utilizado por el jugador 4 del equipo rojo
df_summoners = rename(df_summoners, t2_champ4_sum1 = 't2_champ3_sum2')
df_summoners = rename(df_summoners, t2_champ4_sumName1 = 't2_champ3_sumName2')
df_games <- left_join(df_games, df_summoners, by = 't2_champ4_sum1')
df_games$t2_champ4_sum1 <- NULL
# Hechizo secundario utilizado por el jugador 4 del equipo rojo
df_summoners = rename(df_summoners, t2_champ4_sum2 = 't2_champ4_sum1')
df_summoners = rename(df_summoners, t2_champ4_sumName2 = 't2_champ4_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't2_champ4_sum2')
df_games$t2_champ4_sum2 <- NULL
# Hechizo principal utilizado por el jugador 5 del equipo rojo
df_summoners = rename(df_summoners, t2_champ5_sum1 = 't2_champ4_sum2')
df_summoners = rename(df_summoners, t2_champ5_sumName1 = 't2_champ4_sumName2')
df_games <- left_join(df_games, df_summoners, by = 't2_champ5_sum1')
df_games$t2_champ5_sum1 <- NULL
# Hechizo secundario utilizado por el jugador 5 del equipo rojo
df_summoners = rename(df_summoners, t2_champ5_sum2 = 't2_champ5_sum1')
df_summoners = rename(df_summoners, t2_champ5_sumName2 = 't2_champ5_sumName1')
df_games <- left_join(df_games, df_summoners, by = 't2_champ5_sum2')
df_games$t2_champ5_sum2 <- NULL
library(ggplot2)
library(scales)
dfHist = df_games
#Primero elimino las columnas que no necesito.
#Delete champ names
dfHist$t1_champ1Name= NULL
dfHist$t1_champ2Name= NULL
dfHist$t1_champ3Name= NULL
dfHist$t1_champ4Name= NULL
dfHist$t1_champ5Name= NULL
dfHist$t2_champ1Name= NULL
dfHist$t2_champ2Name= NULL
dfHist$t2_champ3Name= NULL
dfHist$t2_champ4Name= NULL
dfHist$t2_champ5Name= NULL
#Delete the character's spells
#Delete team 1 spells
dfHist$t1_champ1_sumName1= NULL
dfHist$t1_champ1_sumName2= NULL
dfHist$t1_champ2_sumName1= NULL
dfHist$t1_champ2_sumName2= NULL
dfHist$t1_champ3_sumName1= NULL
dfHist$t1_champ3_sumName2= NULL
dfHist$t1_champ4_sumName1= NULL
dfHist$t1_champ4_sumName2= NULL
dfHist$t1_champ5_sumName1= NULL
dfHist$t1_champ5_sumName2= NULL
#Delete team 2 spells
dfHist$t2_champ1_sumName1= NULL
dfHist$t2_champ1_sumName2= NULL
dfHist$t2_champ2_sumName1= NULL
dfHist$t2_champ2_sumName2= NULL
dfHist$t2_champ3_sumName1= NULL
dfHist$t2_champ3_sumName2= NULL
dfHist$t2_champ4_sumName1= NULL
dfHist$t2_champ4_sumName2= NULL
dfHist$t2_champ5_sumName1= NULL
dfHist$t2_champ5_sumName2= NULL
#Delete the bans made
#Delete bans t1
dfHist$t1_banName1 = NULL
dfHist$t1_banName2 = NULL
dfHist$t1_banName3 = NULL
dfHist$t1_banName4 = NULL
dfHist$t1_banName5 = NULL
#Delete bans t2
dfHist$t2_banName1 = NULL
dfHist$t2_banName2 = NULL
dfHist$t2_banName3 = NULL
dfHist$t2_banName4 = NULL
dfHist$t2_banName5 = NULL
# Contrario
# Probabilidad del quipo Rojo de tirar primera torre
# si el equipo Azul se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerBLue <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower == "blue"),]
nrow(dfHist_heraldTowerBLue)
p_firstTowerEnemyX<- percent(((nrow(dfHist_heraldTowerBLue))/nrow(dfHist_heraldBLue)))
p_firstTowerEnemyX
# Probabilidad del quipo Azul de tirar primera torre
# si el equipo Rojo se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerRed <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower == "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyY<- percent(((nrow(dfHist_heraldTowerRed))/nrow(dfHist_heraldRed)))
p_firstTowerEnemyY
View(dfHist_heraldBLue)
View(dfHist_heraldTowerBLue)
# Probabilidad del quipo Azul de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerBLue <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower != "blue"),]
nrow(dfHist_heraldTowerBLue)
p_firstTowerBLUE<- percent(((nrow(dfHist_heraldTowerBLue))/nrow(dfHist_heraldBLue)))
p_firstTowerBLUE
# Probabilidad del quipo Rojo de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerRed <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower != "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerRED<- percent(((nrow(dfHist_heraldTowerRed))/nrow(dfHist_heraldRed)))
p_firstTowerRED
# Contrario
# Probabilidad del quipo Rojo de tirar primera torre
# si el equipo Azul se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerEnemyR <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower == "blue"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyX<- percent(((nrow(dfHist_heraldTowerEnemyR))/nrow(dfHist_heraldBLue)))
p_firstTowerEnemyX
# Probabilidad del quipo Azul de tirar primera torre
# si el equipo Rojo se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerEnemyB <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower == "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyY<- percent(((nrow(dfHist_heraldTowerEnemyB))/nrow(dfHist_heraldRed)))
p_firstTowerEnemyY
# Probabilidad del quipo Azul de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerBLue <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower != "blue"),]
nrow(dfHist_heraldTowerBLue)
p_firstTowerBLUE<- percent(((nrow(dfHist_heraldTowerBLue))/nrow(dfHist_heraldBLue)))
p_firstTowerBLUE
# Probabilidad del quipo Rojo de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerRed <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower != "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerRED<- percent(((nrow(dfHist_heraldTowerRed))/nrow(dfHist_heraldRed)))
p_firstTowerRED
# Contrario
# Probabilidad del quipo Rojo de tirar primera torre
# si el equipo Azul se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerEnemyR <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower == "blue"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyX<- percent(((nrow(dfHist_heraldTowerEnemyR))/nrow(dfHist_heraldBLue)))
p_firstTowerEnemyRed
# Probabilidad del quipo Azul de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerBLue <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower != "blue"),]
nrow(dfHist_heraldTowerBLue)
p_firstTowerBLUE<- percent(((nrow(dfHist_heraldTowerBLue))/nrow(dfHist_heraldBLue)))
p_firstTowerBLUE
# Probabilidad del quipo Rojo de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerRed <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower != "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerRED<- percent(((nrow(dfHist_heraldTowerRed))/nrow(dfHist_heraldRed)))
p_firstTowerRED
# Contrario
# Probabilidad del quipo Rojo de tirar primera torre
# si el equipo Azul se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerEnemyR <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower == "blue"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyRed<- percent(((nrow(dfHist_heraldTowerEnemyR))/nrow(dfHist_heraldBLue)))
p_firstTowerEnemyRed
# Probabilidad del quipo Azul de tirar primera torre
# si el equipo Rojo se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerEnemyB <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower == "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyBlue<- percent(((nrow(dfHist_heraldTowerEnemyB))/nrow(dfHist_heraldRed)))
p_firstTowerEnemyBlue
# si se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerBLue <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower != "blue"),]
nrow(dfHist_heraldTowerBLue)
p_firstTowerBLUE<- percent(((nrow(dfHist_heraldTowerBLue))/nrow(dfHist_heraldBLue)))
p_firstTowerBLUE
# Probabilidad del quipo Rojo de tirar primera torre
# si se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerRed <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower != "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerRED<- percent(((nrow(dfHist_heraldTowerRed))/nrow(dfHist_heraldRed)))
p_firstTowerRED
# Contrario
# Probabilidad del quipo Rojo de tirar primera torre
# si el equipo Azul se hace al primer heraldo.
dfHist_heraldBLue <- dfHist[(dfHist$firstRiftHerald == "blue"),]
nrow(dfHist_heraldBLue)
dfHist_heraldTowerEnemyR <- dfHist_heraldBLue[!(dfHist_heraldBLue$firstTower == "blue"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyRed<- percent(((nrow(dfHist_heraldTowerEnemyR))/nrow(dfHist_heraldBLue)))
p_firstTowerEnemyRed
# Probabilidad del quipo Azul de tirar primera torre
# si el equipo Rojo se hace al primer heraldo.
dfHist_heraldRed <- dfHist[(dfHist$firstRiftHerald == "red"),]
nrow(dfHist_heraldRed)
dfHist_heraldTowerEnemyB <- dfHist_heraldRed[!(dfHist_heraldRed$firstTower == "red"),]
nrow(dfHist_heraldTowerRed)
p_firstTowerEnemyBlue<- percent(((nrow(dfHist_heraldTowerEnemyB))/nrow(dfHist_heraldRed)))
p_firstTowerEnemyBlue
# Convierto a tabla y dataframe
probX <- matrix(c (p_firstTowerBLUE, p_firstTowerRED, p_firstTowerEnemyRed, p_firstTowerEnemyBlue), ncol=4, nrow = 1, byrow=TRUE)
colnames(probX) <- c("First Tower Blue","First Tower Red","First Tower EnemyRed", "First Tower EnemyBlue")
rownames(probX) <- c("Probability")
probX <- as.table(probX)
probX
prob1 <- as.data.frame(probX)
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = "#FFFF99", colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name= "Probabilities %") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic")) +
scale_fill_manual(breaks = c("First Tower Blue", "First Tower Red", "First Tower EnemyRed", "First Tower EnemyBlue"),
values=c("red", "blue", "green", "yellow"))
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = "#FFFF99", colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name= "Probabilities %") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic")) +
scale_fill_manual(values=c("red", "blue", "green", "yellow"))
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name= "Probabilities %") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic")) +
scale_fill_manual(values=c("red", "blue", "green", "yellow"))
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name= "Probabilities %") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic")) +
scale_fill_manual(values=c("red", "blue", "green", "yellow"))
Prob1_plot<- ggplot(prob1, aes(x=rownames(prob1), Freq)) + geom_bar(stat='identity', fill = "#FFFF99", colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_y_discrete(name= "Probabilities %") +
scale_x_discrete(name = "Probab. of getting First Tower", labels = c('First Tower Blue','First Tower Red','First Tower EnemyRed','First Tower EnemyBlue')) +
ggtitle("Probabilities % of getting First Tower")
Prob1_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
# Hago tablas y calculo la probabilidad de ganar respecto
# a diferentes variables
library(scales)
attach(dfHist)
table(winner)
tableWin<- table(winner)
table(firstBlood)
tableFB<- table(firstBlood)
table(firstTower)
tableFT<- table(firstTower)
table(firstInhibitor)
tableFI<- table(firstInhibitor)
table(firstBaron)
tableFBar<- table(firstBaron)
table(firstDragon)
tableFD<- table(firstDragon)
table(firstRiftHerald)
tableFRH<- table(firstRiftHerald)
tableFB_Win<- table(firstBlood, winner)
p_firstBlood<-percent(tableFB_Win[1,1]/ tableFB[1])
p_firstBlood
tableFT_Win<- table(firstTower, winner)
p_firstTower<-percent(tableFT_Win[1,1]/ tableFT[1])
p_firstTower
tableFI_Win<- table(firstInhibitor, winner)
p_firstInhibitor<-percent(tableFI_Win[1,1]/ tableFI[1])
p_firstInhibitor
tableFBar_Win<- table(firstBaron, winner)
p_firstBaron<-percent(tableFBar_Win[1,1]/ tableFBar[1])
p_firstBaron
tableFD_Win<- table(firstDragon, winner)
p_firstDragon<-percent(tableFD_Win[1,1]/ tableFD[1])
p_firstDragon
tableFRH_Win<- table(firstRiftHerald, winner)
p_firstRiftHerald<-percent(tableFRH_Win[1,1]/ tableFRH[1])
p_firstRiftHerald
# Convierto a tabla y dataframe
probWin <- matrix(c (p_firstRiftHerald, p_firstDragon, p_firstBaron, p_firstInhibitor, p_firstTower, p_firstBlood), ncol=6, nrow = 1, byrow=TRUE)
colnames(probWin) <- c("p_firstRiftHerald","p_firstDragon","p_firstBaron","p_firstInhibitor","p_firstTower","p_firstBlood")
rownames(probWin) <- c("Probability")
probWin <- as.table(probWin)
probWin
prob2 <- as.data.frame(probWin)
Prob2_plot<- ggplot(prob2, aes(x=rownames(prob2), Freq)) + geom_bar(stat='identity', fill = "lightblue", colour="black") +
geom_text(aes(label = Freq, vjust = 3)) +
scale_x_discrete(labels = c('First Herald','First Dragon','First Baron', 'First Inhibitor', 'First Tower', 'First Blood')) +
scale_y_discrete(name= "Probabilities %") +
ggtitle("Winning probability when Team Blue got First XX")
Prob2_plot + theme(plot.title = element_text(color="Black", size=12, face="bold.italic"))
